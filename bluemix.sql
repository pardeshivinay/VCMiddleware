create table BANK
(
	BANKID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	NAME VARCHAR(20) not null
);

create table LIMIT_MASTER
(
	ID NUMERIC(5) not null primary key,
	LIMIT_TYPE VARCHAR(20) not null
);

CREATE SEQUENCE  VIRTUAL_CARD_RESTRICTION_SEQ
START WITH 1
     INCREMENT BY 1
     NO MAXVALUE
     NO CYCLE
     CACHE 24;
	 
CREATE SEQUENCE VIRTUAL_CARD_SEQ
  START WITH 1
     INCREMENT BY 1
     NO MAXVALUE
     NO CYCLE
     CACHE 24;
	 
	 CREATE SEQUENCE VIRTUAL_ADDRESS_SEQ
  START WITH 1
     INCREMENT BY 1
     NO MAXVALUE
     NO CYCLE
     CACHE 24;
	 
	 CREATE SEQUENCE VIRTUAL_CARD_PRSNL_DETAILS_SEQ
  START WITH 1
     INCREMENT BY 1
     NO MAXVALUE
     NO CYCLE
     CACHE 24;


 CREATE SEQUENCE CUST_SEQ
     START WITH 1
     INCREMENT BY 1
     NO MAXVALUE
     NO CYCLE
     CACHE 24;

	 
CREATE SEQUENCE CUST_OTP_SEQ
START WITH 1
     INCREMENT BY 1
     NO MAXVALUE
     NO CYCLE
     CACHE 24;

create table CUSTOMER
(
	CUSTOMERID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	FIRSTNAME VARCHAR(50) not null,
	LASTNAME VARCHAR(50) not null,
	MOBILENO  NUMERIC(10) not null ,
	USERID  VARCHAR(50) not null ,
	PIN  NUMERIC(6) not null ,
	GENDER  VARCHAR(2) not null 
);

create table CUSTOMER_ACCOUNT_MAPPING
(
	CUSTOMERID NUMERIC(5) not null,
	ACCOUNTNO VARCHAR(50) not null,	
	constraint PK_CUST_ACC primary key (CUSTOMERID, ACCOUNTNO),
	constraint FK_ACC_MAP_CUST_ID  foreign key (CUSTOMERID)  
            references CUSTOMER (CUSTOMERID) 
			 on delete cascade 
);

create table CUSTOMER_OTP
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	CUSTOMERID NUMERIC(5) not null,
	OTP VARCHAR(6) not null,
	ISVALID CHAR NOT NULL,
	GENERATED_TIME TIMESTAMP not null,	
	constraint FK_OTP_CUST_ID  foreign key (CUSTOMERID)  
            references CUSTOMER (CUSTOMERID) 
			 on delete cascade 
);


create table CUSTOMER_VIRTUAL_ADDRESS
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	CUSTOMERID NUMERIC(5) not null,
	CREATED_TIME TIMESTAMP not null,
	VIRTUAL_ADDRESS VARCHAR(100) not null unique,	
	ACCOUNTNO VARCHAR(50) not null, 
	constraint FK_VIRT_ADD_CUST_ID  foreign key (CUSTOMERID,ACCOUNTNO)  
            references CUSTOMER_ACCOUNT_MAPPING (CUSTOMERID,ACCOUNTNO) 
			 on delete cascade
);

create table VIRTUAL_CARD_MASTER
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	CREATED_TIME TIMESTAMP not null,
	VIRTUAL_ADDRESS VARCHAR(100) not null,
	CARD_NO VARCHAR(25),	
	ACCOUNTNO VARCHAR(50) not null, 
	ISACTIVE CHAR,
	constraint FK_VIRT_CARD_CUST_ID  foreign key (VIRTUAL_ADDRESS)  
            references CUSTOMER_VIRTUAL_ADDRESS (VIRTUAL_ADDRESS) 
			 on delete cascade 
);

create table VIRTUAL_CARD_PERSONAL_DETAIL
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	CARDID NUMERIC(5) not null,
	NAME VARCHAR(50) not null,
	GENDER CHAR not null,
	MOBILENO VARCHAR(25) not null,	
	EMAIL VARCHAR(50),
	STATUS VARCHAR(15) NOT NULL,
	constraint FK_VIRT_CARD  foreign key (CARDID)  
            references VIRTUAL_CARD_MASTER (ID) 
			 on delete cascade 	
);


create table MERCHANT_MASTER
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	NAME VARCHAR(50) not null,
	LOCATION VARCHAR(50)
);

create table VIRTUAL_CARD_CUSTOMIZATION
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	CARDID NUMERIC(5) not null,
	PARAMKEY VARCHAR(50) not null,
	PARAMVAL CLOB not null,	
	constraint FK_VIRT_CARD_CUSTMSTN  foreign key (CARDID)  
            references VIRTUAL_CARD_MASTER (ID) 
			 on delete cascade 	
);

create table VIRTUAL_CARD_RESTRICTIONS
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	CARDID NUMERIC(5) not null,
	PARAMKEY VARCHAR(50) not null,
	PARAMVAL VARCHAR(50) not null,	
	constraint FK_VIRT_CARD_RSTRCTN  foreign key (CARDID)  
            references VIRTUAL_CARD_MASTER (ID) 
			 on delete cascade 	
);

create table CARD_TRANSACTIONS
(
	ID NUMERIC(5) not null primary key  GENERATED BY DEFAULT AS IDENTITY,
	CARDID VARCHAR(50) not null,
	TRANSACTIONTIME TIMESTAMP,
	AMOUNT VARCHAR(50) NOT NULL,	
	NOTE  VARCHAR(50) NOT NULL,
	STATUS VARCHAR(50) NOT NULL,
	STATUS_DESC VARCHAR(50) NOT NULL
	/*MERCHANTID NUMERIC(5),
	constraint FK_MRCHNT_ID  foreign key (MERCHANTID)  
            references MERCHANT_DETAILS (ID) 
			 on delete cascade 	*/
);


create table DEPARTMENT
(
	ID NUMERIC(5) not null primary key,
	NAME VARCHAR(20) not null,
	MANAGER_ID NUMERIC(5) default 0 not null
);

create table EMPLOYEE
(
	ID NUMERIC(5) not null primary key,
	FIRST_NAME VARCHAR(20) not null,
	LAST_NAME VARCHAR(20) not null,
	ADRESS VARCHAR(20),
	HIRING_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	DEPT_ID NUMERIC(5) not null,
	SEX VARCHAR(5) default 'F' not null,
	PHONE VARCHAR(20),
	POSITION_ID NUMERIC(5) not null
) ;

ALTER TABLE EMPLOYEE
ADD FOREIGN KEY (DEPT_ID)
REFERENCES EMPLOYEE(ID);

ALTER TABLE DEPARTMENT
ADD FOREIGN KEY (MANAGER_ID)
REFERENCES EMPLOYEE(ID);


INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (1, '2012-03-25', NULL, 5, 'Carlos', 'Once', '13406877', 'M', 1);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (2, '2014-07-25', NULL, 3, 'Bridget', 'Carlson', '13456877', 'F', 2);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (3, '2013-07-17', NULL, 1, 'Allison', 'Marks', '135676877', 'F', 1);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (4, '2014-08-06', NULL, 3, 'James', 'Buchanon', '13456878', 'M', 2);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (5, '2014-08-07', NULL, 5, 'Mark', 'Forever', '23145688', 'M', 1);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (6, '2014-08-08', NULL, 3, 'Laureen', 'James', '13456857', 'F', 2);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (7, '2012-04-05', NULL, 5, 'Maureen', 'Young', '13406877', 'F', 1);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (8, '2014-07-05', NULL, 3, 'Bridget', 'Nice', '13456877', 'F', 2);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (9, '2014-07-07', NULL, 1, 'John', 'Weaver', '135676877', 'M', 2);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (10, '2014-08-10', NULL, 6, 'Lawrence', 'Jenkins', '4568889', 'M', 3);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (11, '2013-09-05', NULL, 6, 'Jennifer', 'Nieves', '13456877', 'F', 3);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (12, '2013-09-06', NULL, 6, 'John', 'Fitz', '134568457', 'M', 3);
INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (13, '2013-08-11', NULL, 5, 'Rohn', 'Regard', '134666877', 'M', 1);
	INSERT INTO EMPLOYEE (ID, HIRING_DATE, ADRESS, POSITION_ID, FIRST_NAME, LAST_NAME, PHONE, SEX, DEPT_ID) 
	VALUES (14, '2015-10-11', NULL, 1, 'Max', 'Lone', '134666877', 'M', 3);
	
INSERT INTO DEPARTMENT (ID, NAME, MANAGER_ID) 
	VALUES (1, 'Human Resources', 1);
INSERT INTO DEPARTMENT (ID, NAME, MANAGER_ID) 
	VALUES (2, 'IT', 9);
INSERT INTO DEPARTMENT (ID, NAME, MANAGER_ID) 
	VALUES (3, 'Support', 2);